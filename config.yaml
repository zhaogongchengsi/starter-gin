# ------ 服务相关配置
AppId: "satrter-gin"
Server:
  Port: 3000 # 服务端口
  Host: 0.0.0.0
  #  debug release test
  Mode: debug # 运行模式
  Prefix: api/v1 # 统一url前缀
  StaticName: /static # 静态文件的路径 一般为 static static/dist/index.html
  Static: static # 静态文件目录 一般是vite 打包后的静态文件目录
  IndexHtml: static/dist/index.html
  # 设置这个选项之后 会自动开启https 开发环境下 可以使用 go run main.go -g ssl 生成临时证书(有效期为一年)
  # Https:
  #   certFile: ssl/cert.pem # path
  #   keyFile: ssl/key.pem # path
  UploadDir: "upload"
Jwt:
  SigningKey: a37e5383b22eb950d1a3496540ceffcc # 盐值 md5(zzhstarter_gin)
  Issuer: satrter_gin # 签发人
  ExpiresAt: 10 # 过期时间(分钟)
Captcha:
  Width: 240
  Height: 80
  Length: 4
  DotCount: 80
  MaxSkew: 0.7
# ------ 日志相关 ---
Zap:
  level: info
  format: console
  prefix: "[starter-server]-"
  director: logs
  show-line: true
  encode-level: LowercaseColorLevelEncoder
  stacktrace-key: stacktrace
  log-in-console: true
# -------------数据库相关配置
DataBase:
  # postgres | mysql | ...
  DbType: mysql
  Username: root
  Password: 123456
  Port: 8089
  Url: localhost
  # starter(mysql) | root (postgres)
  DbName: zzhstarter
  Charset: utf8mb4
  MaxIdleConns: 10
  MaxOpenConns: 100
  TablePrefix:
  SingularTable: true
Redis:
  db: 0
  addr: localhost:8088
  password: ""
Cors:
  AllowHeaders: "Content-Type,AccessToken,X-CSRF-Token, Authorization, Token, new-token"
  AllowMethods: "POST, GET, OPTIONS,DELETE,PUT"
  ExpHeaders: "Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type"
  AllCred: true
  Origin: "*"